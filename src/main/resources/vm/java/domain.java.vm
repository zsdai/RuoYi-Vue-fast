package ${packageName}.domain;

import com.baomidou.mybatisplus.annotation.TableField;
import com.baomidou.mybatisplus.annotation.TableName;
import com.fasterxml.jackson.annotation.JsonFormat;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Getter;
import lombok.Setter;
#foreach ($import in $importList)
import ${import};
#end

import com.ruoyi.framework.aspectj.lang.annotation.Excel;
#if($table.crud || $table.sub)
import com.ruoyi.framework.web.domain.BaseModel;
#elseif($table.tree)
import com.ruoyi.framework.web.domain.TreeEntity;
#end

/**
 * ${functionName}对象 ${tableName}
 *
 * @author ${author}
 * @date ${datetime}
 */
@ApiModel("${functionName}")
@TableName("${tableName}")
@Getter
@Setter
#if($table.crud || $table.sub)
#set($Entity="BaseModel")
#elseif($table.tree)
#set($Entity="TreeEntity")
#end
public class ${ClassName} extends ${Entity}<${ClassName}>
{

#foreach ($column in $columns)
#if(!$table.isSuperColumn($column.javaField))
##    /** $column.columnComment */

#if($column.list)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
    @ApiModelProperty("$column.columnComment")
#if($parentheseIndex != -1)
    @Excel(name = "${comment}", readConverterExp = "$column.readConverterExp()")
#elseif($column.javaType == 'Date')
    @JsonFormat(pattern = "yyyy-MM-dd")
    @Excel(name = "${comment}", width = 30, dateFormat = "yyyy-MM-dd")
#else
    @Excel(name = "${comment}")
#end
#end
## mybatis plus 注解选择
#if($column.isPk=="1")
    @TableId(type = IdType.AUTO)
#end
    @TableField(value = "${column.columnName}")
    private $column.javaType $column.javaField;
#end
#end
#if($table.sub)
##    /** $table.subTable.functionName信息 */
    @ApiModelProperty("$table.subTable.functionName信息")
    private List<${subClassName}> ${subclassName}List;

#end

## #foreach ($column in $columns)
## #if(!$table.isSuperColumn($column.javaField))
## #if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches("[A-Z]"))
## #set($AttrName=$column.javaField)
## #else
## #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
## #end
##     public void set${AttrName}($column.javaType $column.javaField)
##     {
##         this.$column.javaField = $column.javaField;
##     }
##
##     public $column.javaType get${AttrName}()
##     {
##         return $column.javaField;
##     }
## #end
## #end

#if($table.sub)
    public List<${subClassName}> get${subClassName}List()
    {
        return ${subclassName}List;
    }

    public void set${subClassName}List(List<${subClassName}> ${subclassName}List)
    {
        this.${subclassName}List = ${subclassName}List;
    }

#end
}
